
kafka {
    broker-servers = "localhost:9092"
    producer.broker-servers = "localhost:9092"
    consumer.broker-servers = "localhost:9092"
    zookeeper = "localhost:2181"
    producer {
        max-request-size = 1572864
        batch.size = 98304
        linger.ms = 10
    }
    input.topic = dev.telemetry.audit
    groupId = dev-user-cache-updater-consumer-group
}

job {
    env = "dev"
    enable.distributed.checkpointing = false
    statebackend {
      blob {
        storage {
          account = "igot.blob.core.windows.net"
          container = "dev-data-store"
          checkpointing.dir = "checkpoint"
        }
      }
      base.url = "wasbs://"${job.statebackend.blob.storage.container}"@"${job.statebackend.blob.storage.account}"/"${job.statebackend.blob.storage.checkpointing.dir}
    }
}

task {
    parallelism = 1
    consumer.parallelism = 1
    checkpointing.compressed = true
    checkpointing.interval = 60000
    checkpointing.pause.between.seconds = 5000
    restart-strategy.attempts = 3
    restart-strategy.delay = 30000 # in milli-seconds
    usercache.updater.parallelism = 1
}

redisdb.connection.timeout = 30000

redis {
    host = 127.0.0.1
    port = 6379
}
redis-meta {
    database {
      userstore.id = 12
    }
    host = 127.0.0.1
    port = 6379
}
postgres {
    host = 10.0.0.7
    port = 5432
    maxConnections = 2
    user = "analytics"
    password = "password"
}
lms-cassandra {
    host = "10.0.0.7"
    port = "9042"
}

user-read {
  api {
    url = "http://10.0.1.200/learner/private/user/v1/read/"
  }
}
regd.user.producer.pid = "learner-service"
user.self.signin.types = ["google","self"]
user.validated.types = ["sso"]
user.self.signin.key = "Self-Signed-In"
user.valid.key = "Validated"
user.read.url.fields = "locations,organisations"
user.read.api.error = ["CLIENT_ERROR"]
user.redis.registration-count.path = "mdo_registered_officer_count"




